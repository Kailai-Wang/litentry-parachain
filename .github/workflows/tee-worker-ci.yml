name: Tee-worker CI

# this is a modified version of tee-worker/.github/workflows/build_and_test.yml with
# extra triggering control.
#
# the original file (`tee-worker/.github/workflows/build_and_test.yml`) is kept to sync
# upstream changes, therefore we need to manually apply the changes to this file.

# tried symbolic link -- didn't work, see https://stackoverflow.com/a/71704019

on:
  push:
    branches:
      - dev
    paths-ignore:
      - "**/dependabot.yml"
      - "**/README.md"
  pull_request:
    branches:
      - dev
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  LOG_DIR: logs
  BUILD_CONTAINER_NAME: integritee_worker_enclave_test
  UPLOAD_DOWNLOAD_DIR_PREFIX: /tmp

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# to minimise the changes by setting a default working directory
# please note it only applies to the `run` command, not `use` command
defaults:
  run:
    working-directory: tee-worker

jobs:
  check-file-change:
    runs-on: ubuntu-latest
    # see https://github.com/orgs/community/discussions/25722
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    outputs:
      src: ${{ steps.filter.outputs.src }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Checks to see if any files in the PR/commit match one of the listed file types.
      # We can use this filter to decide whether or not to build docker images
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            src:
              - 'tee-worker/**'
              - '.github/workflows/tee-worker-ci.yml'

  integration-tests:
    runs-on: ubuntu-20.04
    env:
      WORKER_IMAGE_TAG: integritee-worker:dev
      CLIENT_IMAGE_TAG: integritee-cli:dev
      COINMARKETCAP_KEY: ${{ secrets.COINMARKETCAP_KEY }}
      TEERACLE_INTERVAL_SECONDS: 4

    strategy:
      fail-fast: false
      matrix:
        include:
          - test: ts-tests
            flavor_id: sidechain
            demo_name: ts-tests

    steps:
      - uses: actions/checkout@v3

      - name: Pull polkadot image
        run: |
          docker pull parity/polkadot:latest
          docker pull litentry/litentry-parachain:latest

      - name: Download cli artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: 4074196520
          name: integritee-cli-client-sidechain-0ab04e0ed0791ce34c55498f6b2626078a6a08f6.tar.gz
          path: ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}

      - name: Download worker artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: 4074196520
          name: integritee-worker-sidechain-0ab04e0ed0791ce34c55498f6b2626078a6a08f6.tar.gz
          path: ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}

      - name: Load Worker & Client Images
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker image load --input ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}/integritee-worker-sidechain-0ab04e0ed0791ce34c55498f6b2626078a6a08f6.tar.gz
          docker image load --input ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}/integritee-cli-client-sidechain-0ab04e0ed0791ce34c55498f6b2626078a6a08f6.tar.gz
          docker images --all

      - name: Re-name Image Tags
        run: |
          docker tag integritee-worker-${{ matrix.flavor_id }}-${{ github.sha }} ${{ env.WORKER_IMAGE_TAG }}
          docker tag integritee-cli-client-${{ matrix.flavor_id }}-${{ github.sha }} ${{ env.CLIENT_IMAGE_TAG }}
          docker images --all

      - name: Generate parachain artefacts
        run: |
          ./scripts/litentry/generate_parachain_artefacts.sh

      - name: Build litentry parachain docker images
        run: |
          cd docker
          docker-compose -f litentry-parachain.build.yml build

      - name: Integration Test ${{ matrix.test }}-${{ matrix.flavor_id }}
        timeout-minutes: 30
        if: ${{ matrix.test != 'resume-worker' }}
        run: |
          cd docker
          docker-compose -f docker-compose.yml -f ${{ matrix.demo_name }}.yml up --no-build --exit-code-from ${{ matrix.demo_name }} -- ${{ matrix.demo_name }}

      - name: Integration Test ${{ matrix.test }}-${{ matrix.flavor_id }}
        timeout-minutes: 30
        if: ${{ matrix.test == 'resume-worker' }}
        run: |
          cd docker
          docker-compose -f docker-compose.yml -f resume-worker.yml up --no-build --exit-code-from resume-worker --attach resume-worker relaychain-alice relaychain-bob integritee-node resume-worker

      - name: Stop docker containers
        run: |
          cd docker
          docker compose -f docker-compose.yml -f ${{ matrix.demo_name }}.yml stop

      - name: Collect Docker Logs
        continue-on-error: true
        if: always()
        uses: jwalton/gh-docker-logs@v2
        with:
          #images: '${{ env.WORKER_IMAGE_TAG }},${{ env.CLIENT_IMAGE_TAG }}'
          tail: all
          dest: ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}/${{ env.LOG_DIR }}

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs-${{ matrix.test }}-${{ matrix.flavor_id }}
          path: ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}/${{ env.LOG_DIR }}

  integration-tests-status-check:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - uses: actions/checkout@v3
      - run: |
          case "${{ needs.integration-tests.result }}" in
            success|skipped) exit 0 ;;
            *) exit 1 ;;
          esac

  # Only push docker image when tests are passed and pushing to `dev` branch
  push-docker-image:
    runs-on: ubuntu-latest
    needs:
      - integration-tests
    if: ${{ success() && (github.event_name == 'push') && (github.ref == 'refs/heads/dev') }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: parachain-artifact
          path: ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}

      - name: Load docker image
        run: |
          docker load -i ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}/litentry-parachain.tar

      - name: Dockerhub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push docker image
        run: docker push litentry/litentry-parachain:latest

  release:
    name: Draft Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build-test, integration-tests]
    outputs:
      release_url: ${{ steps.create-release.outputs.html_url }}
      asset_upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3

      - name: Download Integritee Service
        uses: actions/download-artifact@v3
        with:
          name: integritee-worker-sidechain-${{ github.sha }}
          path: ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}/integritee-worker-tmp

      - name: Download Integritee Client
        uses: actions/download-artifact@v3
        with:
          name: integritee-client-sidechain-${{ github.sha }}
          path: ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}/integritee-client-tmp

      - name: Download Enclave Signed
        uses: actions/download-artifact@v3
        with:
          name: enclave-signed-sidechain-${{ github.sha }}
          path: ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}/enclave-signed-tmp

      - name: Move service binaries
        run: mv ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}/integritee-worker-tmp/integritee-service ./integritee-demo-validateer

      - name: Move service client binaries
        run: mv ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}/integritee-client-tmp/integritee-cli ./integritee-client

      - name: Move service client binaries
        run: mv ${{ env.UPLOAD_DOWNLOAD_DIR_PREFIX }}/enclave-signed-tmp/enclave.signed.so ./enclave.signed.so

      - name: Create required package.json
        run: test -f package.json || echo '{}' >package.json

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: .

      - name: Release
        id: create-release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: true
          # note the path change
          files: |
            tee-worker/integritee-client
            tee-worker/integritee-demo-validateer
            tee-worker/enclave.signed.so
